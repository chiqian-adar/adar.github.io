[{"title":"居中","date":"2017-07-09T08:01:58.372Z","path":"2017/07/09/水平/","text":"水平内联或内联块级元素 parent element { text-align: center;}适用于inline，inline-block，inline-table，inline-flex等。 块级元素 单个块级元素 element { margin: 0 auto;} 多个块级元素 parent element { text-align: center;}element { display: inline-block;} 垂直内联或内联块级元素(当该元素的父元素高度确定时） 单行 元素的padding-top值=元素的padding-bottom值 元素的line-height值=元素的height值 多行 元素的padding-top值=元素的padding-bottom值 display: table-cell parent element {display: table;}element {display: table-cell;vertical-align: middle;} flexbox parent element { display: flex; flex-direction: column; justify-content: center;} 块级元素 高度确定 parent element { position: relative; }element { position: absolute; top: 50%; height: 100px; margin-top: -50px; / account for padding and border if not using box-sizing: border-box; /} 高度不确定 parent element { position: relative;}element { position: absolute; top: 50%; transform: translateY(-50%);} -flexbox .parent { display: flex; flex-direction: column; justify-content: center;} 水平垂直居中 知道宽高 parent element { position: relative;}element { width: 300px; height: 100px; padding: 20px; position: absolute; top: 50%; left: 50%; margin: -70px 0 0 -170px; / account for padding and border if not using box-sizing: border-box; /} 不知道宽高 parent element { position: relative;}element { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);} flexbox parent element { display: flex; justify-content: center; align-items: center;} 相关参考 以CSS为中心：完整的指南 居中作弊工具","tags":[{"name":"布局","slug":"布局","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/布局/"},{"name":"css","slug":"css","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/css/"}]},{"title":"圣杯布局 & 双飞翼布局","date":"2017-07-09T04:02:52.600Z","path":"2017/07/09/圣杯布局/","text":"圣杯布局与双飞翼布局所要实现的界面布局是相同的，都是实现三栏布局，左右两栏大小固定，中间一栏自适应大小，但两者实现的方式有些异同。 圣杯布局结构&lt;div class=&quot;page&quot;&gt; &lt;div class=&quot;head&quot;&gt;head&lt;div&gt; &lt;div class=&quot;contain&quot;&gt; &lt;div class=&quot;main&quot;&gt;main&lt;/div&gt; &lt;div class=&quot;sub&quot;&gt;sub&lt;/div&gt; &lt;div class=&quot;extra&quot;&gt;extra&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;ft&quot;&gt;footer&lt;/div&gt; &lt;/div&gt; 这里注意一点，main部分先写，这样主要部分能首先被浏览器渲染。 主要样式.contain { position: relative; overflow: hidden} .marin { position: relative; ) .sub { float: left; } .extra {float: left; } 将sub与extra移到与main部分平齐.sub { margin-left: 100%; } .extra { margin-left: -100px; } //extra的宽度为100px margin-left的负值可以使块元素往左移，当移到左边的尽头时元素会出现在上一行的最右边，当负值增大时继续往左边移。所以margin-left: -100%;为使元素向左移了整整一行即垂直向上移一行。同理，由于sub之前移到上一行，此时extra处于最左边，margin-left: 负自身宽度;向左移了自身的宽度，即移到了上一行的最右边。 使main部分不被覆盖分两步：一、 让.contain包含框加内边距 .contain { padding: 0 100px 0 150px; } //100、150分别为左右两元素的宽度 二、sub与extra移回原来位置 .sub { position: relative: left: -150px; } .extra { position: relative: right: -100px; } 这就是圣杯布局，以下为完整代码 See the Pen 圣杯布局 by adar (@chiqian-adar) on CodePen. 双飞翼布局主要结构跟圣杯布局类似，圣杯布局是利用.contain设padding值，然后将sub与extra移回原位。而双飞翼布局则是在main元素框内添加一个.main-inner的内嵌框，然后设margin值。前几个步骤一样，直到如下图： 添加内嵌框&lt;div class=&quot;main&quot;&gt; &lt;div class=&quot;main-inner&quot;&gt;main&lt;/div&gt; &lt;/div&gt; 添加margin值.main-inner { margin: 0 100px 0 150px; height: 100%; //加高度 background: orange; //加颜色区别 } 结果如下 以下为完整代码： See the Pen 双飞翼布局 by adar (@chiqian-adar) on CodePen. 以上就是圣杯布局与双飞翼布局的结构分析，如有错误请指正。","tags":[{"name":"布局","slug":"布局","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/布局/"},{"name":"css","slug":"css","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/css/"}]},{"title":"定位与浮动","date":"2017-07-04T15:16:34.949Z","path":"2017/07/04/css的定位机制/","text":"css的定位机制CSS有三种基本的定位机制：普通流、浮动和绝对定位。 普通流：普通流的元素按照所处的html位置依次排列，块圾元素占整行垂直排列，内联元素占一行水平排列。 相对定位[position: relative]：（视为普通流定位）相对于其普通流的位置定位且占据原来元素的位置！可以覆盖其它块元素。 浮动：浮动元素会向左或向右移动直到碰到父元素或是另一个浮动元素。 绝对定位：绝对定位[position: absolute]： 元素位置是相对于距离它最近的那个已定位的祖先(相对/绝对)元素决定的。不占据空间，可以覆盖其它块元素。 固定定位[position: fixed]： 特性与绝对定位一样，不过是相对于浏览器窗口定位。 关于浮动浮动元素具有的特性 可以像inline-block一样变宽高且单行排列。 可以被文字等内联元素围绕。 导致父元素高度坍塌。 如何清除浮动.clearfix:after { content: &quot;200B&quot;; display: block; height: 0; clear: both; } .clearfix { *zoom:1; }","tags":[{"name":"css3","slug":"css3","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/css3/"},{"name":"float","slug":"float","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/float/"}]},{"title":"HTML","date":"2017-07-03T13:03:26.849Z","path":"2017/07/03/小薇 task2遇到的问题/","text":"小薇 task2遇到的问题a包含img元素&lt;a href=&quot;#&quot;&gt; &lt;img src=&quot;猫.jpg&quot; alt=&quot;猫&quot;&gt; &lt;/a&gt; 1、首先&lt;img&gt;与&lt;a&gt;都是inline元素，要使a元素全包含img元素则可以： a {display: block/inline-block;} 但当a元素全包含img元素后img下方还是出现一段空白。 2、img下方为什么会出现空白？img是内联元素，内联元素的排版跟vertical-align有关。vertical-align的默认值为baseline。其意思是让字母或图片的最底端到达基线，当然除了q，p，j之类的字母。 所以img图片下方空白就是基线与底线之间没有填充的距离。处理方法则有： display: block; 直接改成块级元素 font-size: 0; line-height: 0; line-height相当于top与bottom之间的距离 vertical-align: top/bottom/middle; 参考来源： 元素底部为何有空白？ 关于nth-of-type()、nth-child()与first-child和last-child以上分为两类 1、p:nth-of-type(i) 选取其父元素的第i个元素 2、p:nth-child(i)、first-child与last-child 条件： p元素正好在其父元素的第i个元素！！！ 选取其父元素的第i个元素 first-child 与 last-child与之类似需满足条件，否则选取不到 如下： See the Pen bWBdXa by adar (@chiqian-adar) on CodePen. 关于line-height的理解 行高是指文本行基线间的垂直距离。1、图中两条红线之间的距离就是行高，上一行的底线和下一行的顶线之间的距离就是行距，而同一行顶线和底线之间的距离是font-size的大小，行距的一半是半行距。2、那我们所设置的line-height改变的是什么？答案是行距。我们知道行高指基线之间的距离，但也可以理解为两底线之间的距离，其表现都一样，即：行高=行距+内容高度。因为内容高度由font-size来改变字体大小，剩下的也就是行距了。3、这里顺便说一个我们常理解错的地方：一个空的div的高度为0，但在里面放入文字时div会有一个高度，许多人认为这是由放入的文字撑开的。然而我们刚才讲line-height是由行距影响的，如果我们把font-size设为0，line-height设为一个数值，会发现div的高度还是存在。所以高度是由line-height决定的！！4、line-height=height时文字为什么居中？行高有一个特性，叫做垂直居中性。浅的理解就是文字总处于line-height的中间，如图的右下角，font-size的区域处于line-height的中间，行距分居两侧。 更多参考： [学习笔记] css中的line-height css行高line-height的一些深入理解及应用 box-shadow用法 box-shadow: h-shadow v-shadow blur spread color inset; h-shadow 必需。X轴偏移量。允许负值。 v-shadow 必需。y轴偏移量。允许负值。 blur 可选。模糊距离。数值越大越模糊，扩散范围越大。 spread 可选。阴影的尺寸。阴影的厚度。 color 可选。阴影的颜色。 inset 可选。将外部阴影改为内部阴影（一般放在最前面）。 如： .box-shadow { -webkit-box-shadow: 2px 2px 5px #000; -moz-box-shadow: 2px 2px 5px #000; -o-border-radius: 2px 2px 5px #000; box-shadow: 2px 2px 5px #000;} 更多深入 CSS3阴影 box-shadow的使用和技巧总结 CSS阴影效果(Box-shadow)用法趣味讲解 关于css3前缀一、为什么要用前缀？主要目的是为了兼容旧版本的浏览器。新的css3属性还未成为标准前，浏览器已经根据最初草案实现了部分功能，为了与之后确定下来的标准进行兼容，所以每种浏览器使用了自己的私有前缀与标准进行区分，当标准确立后，各大浏览器将逐步支持不带前缀的css3新属性。 二、浏览器引擎现在浏览器流行的内核有： Trident内核：主要代表为IE浏览器Gecko内核：主要代表为FirefoxPresto内核：主要代表为OperaWebkit内核：产要代表为Chrome和Safari 其对应的前缀： Trident内核：前缀为 -msGecko内核：前缀为 -mozPresto内核：前缀为 -oWebkit内核：前缀为 -webkit 三、目前需要加前缀的常用css3属性 border-radius box-shadow @keyframes backface-visibility column属性 flex属性 perspective属性","tags":[{"name":"css3","slug":"css3","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/css3/"},{"name":"ife","slug":"ife","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/ife/"}]},{"title":"HTML","date":"2017-06-19T09:38:09.328Z","path":"2017/06/19/认识HTML/","text":"认识HTMLhtml简介 什么是html HTML是一种标记语言（markup language），浏览器识别html标记的内容并按照一定形式将内容显示出来。 html发展史 html标签的语义化 语义化（Semantic Tag）是指用合适的标签标识适当的内容，它可以起到搜索引擎优化提高可访问性（例如盲人使用的屏幕阅读器），与此同时还可以提高代码的可读性。简而言之也就是在正确的地方使用正确的标签 html基本结构 html5页面结构 html常用标签 div, span,h1~h6,p,strong,emul(无序）,ol（有序）,li, dl, dt, ddq,blockqoute,hr,a,imgpre(会保留换行和空格，常与code一同使用),code,del&amp;nbsp(空格） a标签&lt;!-- 默认超链接 --&gt; &lt;a href=&quot;http://sample-link.com&quot; title=&quot;Sample Link&quot;&gt;Sample&lt;/a&gt; &lt;!-- 当前窗口显示 --&gt; &lt;a href=&quot;http://sample-link.com&quot; title=&quot;Sample Link&quot; target=&quot;_self&quot;&gt;Sample&lt;/a&gt; &lt;!-- 新窗口显示 --&gt; &lt;a href=&quot;http://sample-link.com&quot; title=&quot;Sample Link&quot; target=&quot;_blank&quot;&gt;Sample&lt;/a&gt; &lt;!-- iframe 中打开链接 --&gt; &lt;a href=&quot;http://sample-link.com&quot; title=&quot;Sample Link&quot; target=&quot;iframe-name&quot;&gt;Sample&lt;/a&gt; &lt;iframe name=&quot;iframe-name&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; &lt;!-- 页面中的锚点 --&gt; &lt;a href=&quot;#achor&quot;&gt;Achor Point&lt;/a&gt; &lt;section id=&quot;achor&quot;&gt;Achor Content&lt;/section&gt; &lt;!-- 邮箱及电话需系统支持 --&gt; &lt;a href=&quot;mailto:sample-address@me.com&quot; title=&quot;Email&quot;&gt;Contact Us&lt;/a&gt; &lt;!-- 多个邮箱地址 --&gt; &lt;a href=&quot;mailto:sample-address@me.com, sample-address0@me.com&quot; title=&quot;Email&quot;&gt;Contact Us&lt;/a&gt; &lt;!-- 添加抄送，主题和内容 --&gt; &lt;a href=&quot;mailto:sample-address@me.com?cc=admin@me.com&amp;subject=Help&amp;body=sample-body-text&quot; title=&quot;Email&quot;&gt;Contact Us&lt;/a&gt; &lt;!-- 电话示例 --&gt; &lt;a href=&quot;tel:99999999&quot; title=&quot;Phone&quot;&gt;Ring Us&lt;/a&gt; pre（保留原格式）与code（代码编写）&lt;pre&gt; &lt;code&gt; &lt;dl&gt; &lt;dt&gt;姓名&lt;/dt&gt; &lt;dd&gt;小明&lt;/dd&gt; &lt;dt&gt;作品&lt;/dt&gt; &lt;dd&gt;《论Web的在未来领域的影响》&lt;/dd&gt; &lt;dd&gt;《论如何成为Web大神》&lt;/dd&gt; &lt;/dl&gt; &lt;/code&gt; &lt;pre&gt; 表格&lt;table border=&quot;1&quot;&gt; &lt;caption&gt;表格名称或描述&lt;/caption&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;header&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;姓别&lt;/th&gt; &lt;!--跨2行--&gt; &lt;td&gt;男&lt;/td&gt; &lt;th colspan=&quot;2&quot;&gt;6&lt;/th&gt; &lt;!--跨2列--&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;女&lt;/td&gt; &lt;td&gt;2*3&lt;/td&gt; &lt;td&gt;1*6&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; 表单&lt;form method=&quot;post&quot; action=&quot;save.php&quot;&gt; &lt;!--输入框--&gt; &lt;label for=&quot;email&quot;&gt;邮箱：&lt;/label&gt; &lt;!--利用label来快速激活相应条目--&gt; &lt;input id=&quot;email&quot; type=&quot;email&quot; name=&quot;email&quot;&gt; &lt;label for=&quot;pass1&quot;&gt;密码：&lt;/label&gt; &lt;input id=&quot;pass1&quot; type=&quot;password&quot; name=&quot;pass&quot;&gt; &lt;!--单选框--&gt; &lt;span&gt;姓别：&lt;/span&gt; &lt;label for=&quot;male&quot;&gt;男&lt;/label&gt; &lt;input id=&quot;male&quot; type=&quot;radio&quot; checked=&quot;checked&quot; value=&quot;male&quot; name=&quot;gender&quot;&gt; &lt;label for=&quot;female&quot;&gt;女&lt;/label&gt; &lt;input id=&quot;female&quot; type=&quot;radio&quot; value=&quot;female&quot; name=&quot;gender&quot;&gt; 注：name的值必须一样 &lt;!--下拉列表框--&gt; &lt;span&gt;城市：&lt;/span&gt; &lt;select&gt; &lt;option value=&quot;北京&quot;selected=&quot;selected&quot;&gt;北京&lt;/option&gt; &lt;option value=&quot;上海&quot;&gt;上海&lt;/option&gt; &lt;option value=&quot;广西&quot;&gt;广西&lt;/option&gt; &lt;option value=&quot;广东&quot;&gt;广东&lt;/option&gt; &lt;/select&gt; &lt;!--复选框--&gt; &lt;span&gt;爱好:&lt;/span&gt; &lt;input id=&quot;sport&quot; type=&quot;checkbox&quot; value=&quot;sport&quot; name=&quot;hobby&quot;&gt; &lt;label for=&quot;sport&quot;&gt;运动&lt;/label&gt; &lt;input id=&quot;art&quot; type=&quot;checkbox&quot; value=&quot;science&quot; name=&quot;hobby&quot;&gt; &lt;label for=&quot;art&quot;&gt;艺术&lt;/label&gt; &lt;input id=&quot;science&quot; type=&quot;checkbox&quot; value=&quot;science&quot; name=&quot;hobby&quot;&gt; &lt;label for=&quot;science&quot;&gt;科学&lt;/label&gt; &lt;!--多行文本输入--&gt; &lt;span&gt;个人介绍：&lt;/span&gt; &lt;textarea rows=&quot;10&quot; cols=&quot;40&quot; placeholder=&quot;请输入你的个人描述....&quot;&gt; &lt;/textarea&gt; &lt;!--placeholder的值在标签被聚焦时消失--&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt; &lt;/form&gt; 实用网站 html标签兼容性检测 w3school 参考 前端开发笔记本","tags":[{"name":"html","slug":"html","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/html/"},{"name":"ife","slug":"ife","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/ife/"}]},{"title":"vim插件的常用功能写法","date":"2017-05-23T10:27:01.552Z","path":"2017/05/23/vim插件的常用功能写法/","text":"vim插件的常用功能写法Emmet 快速编写html代码 用法： 新建一个html文件，输入html:5,把光标移到5的后一位，按Emmet的快捷键&lt;ctrl+y&gt;,。 注意：先按&lt;ctrl+y&gt;组合键再快速按,。 常用方法: E 代表HTML标签。 E#id 代表id属性。 E.class 代表class属性。 E[attr=foo] 代表某一个特定属性。 E{foo} 代表标签包含的内容是foo。 E&gt;N 代表N是E的子元素。 E+N 代表N是E的同级元素。 E^N代表N是E的上级元素。 E*N 代表连续写N个E标签。 E$*N 代表自动编号。如：div#item\\$.class$$*3 具体请参考： HTML代码简写法：Emmet和Haml Ctrlp 对文件以及buffer进行模糊查询，快速打开文件 常用方法： &lt;ctrl+p&gt; 为打开Ctrlp的快捷键 tab 模糊匹配的自动补齐 &lt;ctrl+y&gt; 创建文件 &lt;ctrl+d&gt; 切换搜索模式（路径和文件名） &lt;ctrl+f&gt; 切换快速打开模式（文件、历史或缓冲区） &lt;ctrl + x/y&gt; 在当前窗口水平/垂直分屏打开文件垂直分屏 &lt;ctrl+j/k&gt; 上下移动 &lt;ctrl+z&gt; 标注 &lt;ctrl+o&gt; 打开多个文件 NERDTree 浏览项目的总体的目录结构和创建删除重命名文件或文件名 常用快捷键： &lt;ctrl+e&gt; 打开spf13的NERDTree q 关闭NERDTree o 在已有窗口中打开文件、目录或书签，并跳到该窗口 go 在已有窗口 中打开文件、目录或书签，但不跳到该窗口 O 递归打开选中 结点下的所有目录 x 合拢选中结点的父目录 T 在新 Tab 中打开选中文件/书签，但不跳到新 Tab gT 前一个 tab gt 后一个 tab :tabc 关闭当前的 tab :tabo 关闭所有其他的 tab i split 一个新窗口打开选中文件，并跳到该窗口 gi split 一个新窗口打开选中文件，但不跳到该窗口 s vsplit 一个新窗口打开选中文件，并跳到该窗口 gs vsplit 一个新 窗口打开选中文件，但不跳到该窗口 m 显示文件系统菜单 r 递归刷新选中目录 ! 执行当前文件 更多请参考： NERDTree插件（vim笔记三） scrooloose/nerdtree Surround 用于外理成对的包围符号，如单引号、双引号······ 用法： cs&quot;&#39;替换双引号为单引号 cs&#39;&lt;q&gt;替换单引号为标签 ds&quot;删除双引号 ys[动作][对象][符号]添加符号：如ysiw&quot;为光标下的单词添加” 可视模式下按S即可添加想要的符号 yS和ySS还能让包围内容单独一行并且加上缩进 yss命令可以用于整行操作，忽略中间的空格 更多请参考： 每日vim插件–surround.vim NERDCommenter 快速注释 用法： &lt;leader&gt;cc 注释当前行 &lt;leader&gt;cu 取消注释 &lt;leader&gt;c(空格)切换注释/非注释状态 &lt;leader&gt;ca 在可选的注释方式之间切换 &lt;leader&gt;cy 注释并复制 &lt;leader&gt;cs 优美的注释 EasyMotion 更高效的跳转 用法： &lt;leader&gt;&lt;leader&gt;w和&lt;leader&gt;&lt;leader&gt;b跳转到当前光标前后的位置 &lt;leader&gt;&lt;leader&gt;s加上想要搜索的第一位字母 &lt;leader&gt;&lt;leader&gt;j和&lt;leader&gt;&lt;leader&gt;k行级跳转 &lt;leader&gt;&lt;leader&gt;h和&lt;leader&gt;&lt;leader&gt;l行内跳转 参考来自： VIM插件: EASYMOTION[快速跳转]","tags":[{"name":"vim","slug":"vim","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/vim/"},{"name":"插件","slug":"插件","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/插件/"}]},{"title":"photoshop前端切图","date":"2017-04-27T11:16:33.948Z","path":"2017/04/27/界面设置/","text":"界面设置新建设置新建文档的初始化设置参数应如下完成设置后选择 存储预设 可以保存设置，以便下次可以直接采用。 移动工具快捷操作自动选择 不要勾选，切换 组 到 图层，选中较深层的图层时只需 ctrl+左键 视图和窗口设置勾选 智能参考线 和 标尺以下为相应的位置：视图–显示–智能参考线视图–标尺右边的操作窗口只需要保留 信息 、字符、图层 和 历史记录。首先要把默认的多余窗口关掉，点击 窗口 把第三大格里的无关窗口勾消掉然后把如下图的无关面板（红框） 右键–关闭，把需要保留的面板拖拽到右边合并。修改 信息 面板的相关参数 修改 单位点击 编辑–首选项–单位与标尺–把 单位 里的选项全改为 像素 保存设置点击 窗口–工作区–新建工作区修改后就 存储 就可以了 基本操作选区： shift—正圆或正方形、添加选区 alt—-以鼠标位置为中心、减去选区 shift+m—切换矩形与椭圆 裁减所选图层 选中图层 切换到裁减工具 参考线 打开 标尺 打开参考线：从左边缘拉出参考线 快捷打开参考线：alt+v+e 删除参考线：将参考线拉出边缘（上或下边缘） 切换参考线：alt+左键 隐藏参考线：ctrl+; 切图传统切图 ctrl+左键选中图层 用参考线将所需切的图包围 点击切片工具 点击击于参考线的切图 删除不需要的切片 点击 文件–存储为web所用格式 点击 存储 精准切图点击 文件–脚本–将图层导出到文件 自动切图 点击 编辑–首选项–增效工具–勾选 启用生成器 点击 文件–生成–勾选 图像资源 在切所需图层中重命名文件名 加后缀 如：.png 可改变大小命名前 添加大小（如：200%logo.png） 切的图会自动生成-assets为结尾的文件夹里 抽出资源 点击所需图层–文件–抽出资源复制css 点击所需图层–图层–复制css","tags":[{"name":"前端","slug":"前端","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/前端/"},{"name":"切图","slug":"切图","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/切图/"},{"name":"photoshop","slug":"photoshop","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/photoshop/"}]},{"title":"flexbox布局","date":"2017-04-21T01:33:55.998Z","path":"2017/04/21/Flex布局是什么？/","text":"Flex布局是什么？flex布局是W3C提出的一种新的布局方式，其与传统的布局相比具有更大的灵活性。利用flex布局，元素可以在各个方向上进行布局且能够自适应大小，更主要的是代码简单啊！！！不过这是有兼容性的。。。以下是各浏览器对flex布局的支持 基本概念 弹性容器(Flex container)包含着弹性项目的父元素。通过设置 display 属性的值为 flex 或 inline-flex 来定义弹性容器。 弹性项目(Flex item)弹性容器的每个子元素都称为弹性项目。 轴(Axis) 主轴(main axis) 侧轴(cross axis) 单个项目占据的主轴空间叫做 主轴尺寸(main size)，占据的交叉轴空间叫做 侧轴尺寸(cross size) 容器属性 flex-direction flex-wrap flex-flow justify-content align-items align-content flex-direction 决定主轴方向flex-direction: row | row-reverse | column column-reverse; row（默认）：主轴为水平方向，起点在左端。 row-reverse：主轴为水平方向，起点在右端。 column：主轴为垂直方向，起点在上沿。 column-reverse：主轴为垂直方向，起点在下沿。 flex-wrap 项目的换行flex-wrap: nowrap | wrap | wrap-reverse; nowrap: (默认)不换行 wrap: 可以多行，第一行在上方 wrap-reverse: 可以多行，第一行在下方 nowrap wrap wrap-reverse flex-flow flex-flow为flex-direction 和 flex-wrap 的简写,默认值为row nowrapflex-flow: flex-direction || flex-wrap; justify-content 项目在主轴上的对齐方式。justify-content: flex-start | flex-end | center | space-between | space-around; flex-start: 左对齐（默认） flex-end: 右对齐 center: 居中对齐 space-between:两端对齐，项目之间的间距 space-around: 均匀对齐，每个项目两端的间距相等 align-items 项目在交叉轴上的对齐方式align-items: flex-start | flex-end | center | baseline | stretch; flex-start: 交叉轴起点对齐 flex-end: 交叉轴终点对齐 center: 交叉轴居中对齐 baseline: 第一行文字的底部对齐 stretch: （默认）如果项目木有设置高度或者高度为auto,那么项目拉伸充满整个交叉轴空间 flex-diretion决定主轴的方向，justfy-content是在主轴上的齐方式，align-items 是在交叉轴上的对齐方式，因此它们之间是相互影响的。 align-content 定义了多根轴线的对齐方式（项目只有一行，该属性不起作用）align-content: flex-start | flex-end | center | space-between | space-around | stretch; flex-start：与交叉轴的起点对齐。 flex-end：与交叉轴的终点对齐。 center：与交叉轴的中点对齐。 space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。 space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。 stretch（默认值）：轴线占满整个交叉轴。 项目的属性 order flex-grow flex-shrink flex-basis flex align-self order 定义项目的排列顺序（不必按照文档流的顺序）order: (integer);数值越小，排列越靠前，默认为0 flex-grow 定义项目的放大比例，默认为0（有剩空间时大小不变）flex-grow: ; / default 0 / flex-shrink 定义了项目的缩小比例，默认为1flex-shrink: ; / default 1 /如果为0时不变大小 flex-basis 定义项目占据的主轴空间（main size）即固定大小相当于width,默认是auto. flex-basis: (length) | auto; / default auto / 可能被其他flex属性所影响,如:flex-diretion flex flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。 flex: none | [ &lt;’flex-grow’&gt; &lt;’flex-shrink’&gt;? || &lt;’flex-basis’&gt; ] 两个快捷值:auto (1 1 auto) 和 none (0 0 auto) align-self 定义单个项目在交叉轴的对齐方式，可覆盖align-items属性取值和align-items一样：align-self: auto | flex-start | flex-end | center | baseline | stretch; 参考来自 Flex 布局教程：语法篇 通过动图形象地为你介绍 flexbox 是如何工作的（一）","tags":[{"name":"前端","slug":"前端","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/前端/"},{"name":"flexbox","slug":"flexbox","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/flexbox/"},{"name":"css3","slug":"css3","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/css3/"},{"name":"布局","slug":"布局","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/布局/"}]},{"title":"关于markdown的常用语法","date":"2017-04-20T05:25:32.445Z","path":"2017/04/20/markdown的常用语法/","text":"markdown的常用语法1、粗体与斜体 使用*(斜体)和**(粗体)来包围文字 2、分级标题 标题前添加#，# 表示一级标题，## 表示二级标题，以此类推 3、外链接 [描述]（链接）为文字加链接 4、无序列表 用 * + - （三者之一）来包围每一列 5、有序列表 数字加上小数点 1. first 2. second 3. third 6、引用 > 放在句子前面 7、行内代码块 如：`html` 注意( 这个符号是在 Esc 键下面) 8、插入图片 ！[描述]（路径或地址） 9、目录 直接写下 [TOC] 10、标签表示 tags: - 技能 - markdown 11、删除线 用~~来包围使用删除线的内容 12、代码块 每行代码前加四个空格（Tab) 13、加强的代码块有行号显示 用 ``` 加上代码类别(也可不加)来包围 例如：``` pthon 14、分割线 另起一行输入 — 15、反编译符 在标记符号前加\\ 如 \\## 注！以上标记符与文字间要有空格，且建议行与行之间添加空行。 另外强烈推荐一个在线编缉markdown的网站，还支持VIM模式编写！！！ 作业部落","tags":[{"name":"技能","slug":"技能","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/技能/"},{"name":"markdown","slug":"markdown","permalink":"https://chiqian-adar.github.io/adar.github.io/tags/markdown/"}]}]